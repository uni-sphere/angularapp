(function () {

  angular.module('mainApp.directives').directive('slide2', ['Restangular', '$auth', 'Notification', function(Restangular, $auth, Notification) {
    return {
      restrict: 'E',
      templateUrl: 'home/slide2.html',
      scope: {
        activateSpinner: '=',
        desactivateSpinner: '='
      },
      link: function(scope) {

        scope.newUni = "";
        scope.markerPerso = [];
        scope.showExistingSchool = false;
        scope.showNewSchool = false;
        scope.subdomainCreated = false;
        scope.signupShow = false;
        scope.geolocation = navigator.geolocation;

        scope.adminEmail = "";

        Restangular.one('organizations').get().then(function (universities) {
          scope.universities = universities.plain();
        }, function(){
          console.log("There getting the universities");
        });

        var map;
        scope.marker = "";

        scope.$on('mapInitialized', function(evt, evtMap) {
          map = evtMap;
          addMarkers(scope.universities);
        });

        function addMarkers(list){
          list.forEach(function(node) {
            var pos = new google.maps.LatLng(node.latitude,node.longitude);
            var marker = new google.maps.Marker({
              position: pos,
              map: map,
              title: node.name,
              icon: '<%= asset_path "pin-colleg.png" %>',
              place_id: node.place_id,
              subdomain: node.subdomain,
              name: node.name
            });
            google.maps.event.addListener(marker, 'click', function() {

              if(scope.selectedMarkerPerso){
                scope.selectedMarkerPerso.setAnimation(null);
              }

              scope.selectedMarkerPerso = marker;
              // marker.setAnimation(google.maps.Animation.BOUNCE);

              map.setCenter(marker.getPosition());
              zoomMap(9);


              scope.place = marker
              scope.showExistingSchool = "http://" + marker.subdomain + ".unisphere.eu";
              scope.$apply()
            });

            scope.markerPerso.push(marker);
          });
        }

        scope.centerMap = function(){
          if(navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
              var pos = new google.maps.LatLng(position.coords.latitude,position.coords.longitude);
              map.setCenter(pos);
              zoomMap(9);
            });
          } else {
            Notification.error("Your browser doesn't support geolocation")
          }
        }

        scope.placeChanged = function() {
          scope.place = this.getPlace();
          scope.showExistingSchool = findPlace(this.getPlace());
          console.log(scope.showExistingSchool)
          scope.showNewSchoolUrl = false;
          scope.subdomainCreated = false;
          scope.signupShow = false;
          scope.showNewSchool = false;

          // We move the map to the place searched
          map.panTo(this.getPlace().geometry.location);

          // We zoom on the map
          zoomMap(9);

          // We remove the previous marker if there was one
          if(scope.selectedMarker){
            scope.selectedMarker.setMap(null);
          }

          // We remove the previous animation on the marker is there was one
          if(scope.selectedMarkerPerso){
            scope.selectedMarkerPerso.setAnimation(null);
          }

          // If the schools exist
          if(scope.showExistingSchool){
            console.log("school already uses unisphere");

            // We make the marker bounce
            scope.markerPerso.forEach(function(node){
              if(node.place_id == scope.place.place_id){
                scope.selectedMarkerPerso = node;
                // node.setAnimation(google.maps.Animation.BOUNCE);
              }
            })
          }
          // If the school doesn't exist
          else{

            // Gestion of popup
            scope.showNewSchool = true;
            // console.log(scope.place);

            // We add a marker on the map
            scope.selectedMarker = new google.maps.Marker({
              position: this.getPlace().geometry.location,
              map: map
            });
            console.log("school doesnt use unisphere")
          }

        }

        scope.currentPosition = function(){
          map.panTo("currentLocation")
        }

        scope.displaySchool = function(){
          scope.showSchool = true;
        }

        scope.hideSchool = function(){
          scope.showSchool = false;
        }


        /*=============================================
        =            Creation of a new uni            =
        =============================================*/


        // Step 1 - Look up for uni / extract url
        scope.findUrl = function(){
          scope.showNewSchool = false;
          scope.signupShow =  true
        };

        //Step 2 - Creation. Send info to backend
        scope.signup = function(){

          if(scope.homeSignup.$invalid){
            if(scope.homeSignup.$error.email){
              console.log("Error: signup | email invalid");
              Notification.error("You misstyped your email address")
            } else if(scope.homeSignup.$error.minlength){
              console.log("Error: signup | Password not long enough");
              Notification.error("Your password needs to have at least 8 characters");
              scope.adminPassword = "";
            } else{
              console.log("ERROR: unknown");
              Notification.error("We can't temporarily create you an account");
            }
          } else{

            scope.activateSpinner()

            var newUni = {
              name: scope.place.name,
              latitude: scope.place.geometry.location.A,
              longitude: scope.place.geometry.location.F,
              place_id: scope.place.place_id,
              website: scope.place.website
            }

            Restangular.all('organizations').post(newUni).then(function(d) {

              var newOrga = d;
              console.log("organization created");

              // We push the new uni to our local storage
              scope.universities.push(d.organization);

              // Sign up
              var credentials = {
                name: scope.adminName,
                email: scope.adminEmail,
                password: scope.adminPassword,
                password_confirmation: scope.adminPassword,
                organization_id: newOrga.organization.id
              };

              $auth.submitRegistration(credentials)
              .then(function(resp) {
                console.log("User signup");

                // log in after sign in
                var login = {
                  email: scope.adminEmail,
                  password: scope.adminPassword
                };

                $auth.submitLogin(login)
                .then(function(d) {
                  console.log("User login");

                  // Send email
                  Restangular.one('user/welcome').get({id: d.id, organization_id: newOrga.organization.id}).then(function () {
                    scope.desactivateSpinner()

                    console.log("email sent");
                    scope.signupShow = false;
                    Notification.success(scope.place.name + " is now using unisphere! We sent you a mail at " + scope.adminEmail)

                    // We remove the previous marker if there was one
                    if(scope.selectedMarker){
                      scope.selectedMarker.setMap(null);
                    }

                    // We add the new marker on the map
                    addMarkers([newOrga.organization])

                  }, function(d){
                    scope.desactivateSpinner()
                    console.log("Error: Signup | Impossible to send a mail");
                    console.log(d)
                  });
                })
                .catch(function(d) {
                  scope.desactivateSpinner()

                  console.log(d);
                  console.log("Error: Signup");
                  Notification.error("We can't temporarily create you an account")
                });

              })
              .catch(function(d) {
                console.log(d);
                if(d.status == 403){
                  console.log("Error: Sign up | email account is already bound to another organization");
                  Notification.error("Currently we only allow a single organization per email addresses");
                } else{
                  console.log("Error: Sign up")
                  Notification.error("We can't temporarily create you an account");
                }

                // We delete the organization we just created
                Restangular.all('organizations/' + newOrga.organization.id).remove().then(function() {
                  console.log("Ok: organization deleted");
                  console.log(d);
                }, function(d) {
                  console.log("Error: Impossible to delete the organization");
                  console.log(d);
                });

              });


            }, function(d){
              console.log("Error: Signup | Impossible to create a subdomain for " + scope.place.name + ", try again");
              console.log(d);
              Notification.error("We can't temporarily create you an account");
              scope.adminPassword = "";
            });

          }
        }

        scope.closePopupMap = function(){
          scope.showExistingSchool = false;
          scope.showNewSchool = false;
          scope.subdomainCreated = false;
          scope.signupShow = false;
        }

        /*=================================
        =            functions            =
        =================================*/

        function findPlace(place){
          var uni = false;
          scope.universities.forEach(function(node) {
            if(node.place_id == place.place_id){
              uni = "http://" + node.subdomain + ".unisphere.eu";
            }
          });
          return uni
        }

        function zoomMap(zoom){
          if(map.getZoom() < zoom){
            map.setZoom(map.getZoom() + 1);
            setTimeout(function(){
              zoomMap(zoom)
            },1000);
          }
        }

      }
    }

  }]);
}());
