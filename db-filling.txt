organization = Organization.create(name: 'Sandbox', website: 'http://sandbox.unisphere.eu')
organization.nodes.create(name: "Sandbox", parent_id: 0)
Node.last.reports.create
organization.nodes.create(name: "premiere", parent_id: 1)
Node.last.reports.create
organization.nodes.create(name: "S", parent_id: 2)
Node.last.reports.create
Node.last.chapters.create(title: "main", parent_id: 0, user_id: 1)
organization.nodes.create(name: "ES", parent_id: 2)
Node.last.reports.create
Node.last.chapters.create(title: "main", parent_id: 0, user_id: 1)
organization.nodes.create(name: "terminal", parent_id: 1)
Node.last.reports.create
organization.nodes.create(name: "L", parent_id: 5)
Node.last.reports.create
Node.last.chapters.create(title: "main", parent_id: 0, user_id: 1)
organization.nodes.create(name: "STI", parent_id: 5)
Node.last.reports.create
Node.last.chapters.create(title: "main", parent_id: 0, user_id: 1)
node = Organization.last.nodes.last
node.chapters.create(title: "Algebre", parent_id: 4, user_id: 1)
node.chapters.create(title: "Endomorphismes", parent_id: 5, user_id: 1)
node.chapters.create(title: "Produit scalaire", parent_id: 5, user_id: 1)
node.chapters.create(title: "Analyse", parent_id: 4, user_id: 1)
node.chapters.create(title: "Fonctions", parent_id: 8, user_id: 1)
node.chapters.create(title: "Derivees", parent_id: 8, user_id: 1)

===
chapters = Chapter.where(user_id: User.last.id)
ids = []
chapters.each do |chapter|
ids << chapter.node_id
end
nodes = Node.where(id: ids)

nodes.each do |n|
r = n.reports.create(downloads: Random.rand(50))
d = r.created_at-7.days
r.update(created_at: d)
r = n.reports.create(downloads: Random.rand(50))
d = r.created_at-14.days
r.update(created_at: d)
r = n.reports.create(downloads: Random.rand(50))
d = r.created_at-21.days
r.update(created_at: d)
end
====

scalingo -a angularapp run 
rake db:drop db:create db:migrate

Awsdocument.all.each do |a|
a.destroy
end

include SubdomainHelper
helper.create_pointer('lyceemachin')

include ApplicationHelper
helper.download

ActionController::Base::AwsdocumentsController.new.download

ActionController::Base::OrganizationsController.new.create

app.post('http://api.unisphere-dev.eu/organizations', {"name" => "organization_name", "email" => "clement@muller.uk.net", "password" => "organization_password"})

UserMailer.welcome_email('access', 'LycÃ©e Machin', 'clement@muller.uk.net', "http://lyceemachin.unisphere.eu").deliver

UserMailer.password_forgoten('gabriel@muller.uk.net', Organization.last).deliver

UserMailer.activity_email(User.last).deliver

UserMailer.password_forgoten_email(User.last.email, Organization.last).deliver

ActionController::Base::ReportssController.new.update

user = User.new(email: 'clement@muller.uk.net', organization_id: Organization.first.id)
user.password = 'password'

whenever --update-crontab

Benchmark.measure { app.get('http://api.unisphere-dev.eu/chapters', {"node_id" => 7}) }









